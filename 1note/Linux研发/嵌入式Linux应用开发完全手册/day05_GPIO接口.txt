目标：
掌握嵌入式开发的步骤：编程、编译、烧写、运行
通过GPIO的操作了解软件如何控制硬件

5.1 GPIO硬件介绍
    GPIO（General Purpose I/O Ports）意思为通用输入/输出端口。通俗的讲，就是一些引脚，可以通过他们输出高低店铺或者通过他们读入引脚状态---是高电平还是低电平。
    5.1.1通过寄存器来操作GPIO引脚
	对于这几组GPIO引脚，他们的寄存器是相似的：
	GPxCON用于选择引脚功能
	GPxDAT用于读写引脚数据
	GPxUP用于确定是否使用内部上拉电阻
	x为A、B、...、H/J 
	1.GPxCON寄存器
	    从寄存器的名字即可看出，它用于配置（Configure）---选择引脚的功能。
	2.GPxDAT寄存器
	    GPxDAT 用于读/写引脚：当引脚呗设为输入时，此寄存器可知相应引脚的店铺状态是高还是低；当引脚被设为输出时，写此寄存器相应位可令此引脚输出高电平或低电平。
	3.GPxUP寄存器 （GPxPUD）
	    GPxUP：某位为1时，相应引脚无内部上拉电阻；为0时，相应引脚使用内部上拉电阻
	    上拉电阻、下拉电阻的作用在于，当GPIO引脚处于第三态（既不是输出高电平，也不是输出低电平，而且呈高阻态，即相当于没接芯片）时，它的电平状态由上拉电阻、下拉电阻确定。
    5.1.2怎么使用软件访问硬件
	1.访问单个引脚
	单个引脚的操作无外乎3种：输出高低电平、检测引脚状态、中断。对某个引脚的操作一般通过读、写寄存器来完成。
		#define GPJ2CON (*(volatile unsigned long *)0xE0200280)
		#define GPJ2DAT (*(volatile unsigned long *)0xE0200284)
		#define GPJ2PUD (*(volatile unsigned long *)0xE0200288)
		GPBCON  =  1;	//设置为输出模式
		GPBDAT &= ~（1<<0）;
	2.以总线方式访问硬件
	并非只能通过寄存器才能发出硬件信号，实际上，通过访问总线的方式控制硬件更常见。
5.2GPIO操作实例：LED和按键
    
	
	