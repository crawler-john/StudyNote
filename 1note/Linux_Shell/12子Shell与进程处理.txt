第12章 子Shell与进程处理

12.1 子Shell
	父子Shell是相对的，它描述了两个Shell进程的fork关系，父Shell指在控制终端或xterm窗口给出提示符的进程，子shell是由父shell创建的进程。
	Shell命令可分为内建命令和外部命令，内建命令是由Shell本身执行的命令，而外部命令由fork创建出来的子Shell执行。
	简而言之，内建命令不能创建子Shell，外部命令创建子shell。正是如此，内建命令执行的速度要比外部命令快。
	12.1.1 内建命令
		内建命令就是包含在bash Shell工具包中的命令。
	12.1.2 圆括号结构
		圆括号结构能够强制将其中的命令运行在子Shell中，它的基本结构为：
		(
		command 1
		command 2
		...
		command 3
		)
12.2 Shell的限制模式
	之前讲的都是Shell运行在正常模式下的，Shell还有一种模式称为限制模式，简称RSH，处于限制模式的Shell下运行一个脚本或脚本片段，将会禁用一些命令或操作。
	Shell的限制模式是Linux系统基于安全方面的考虑，目前是为了限制脚本用户的权限，并尽可能地减小脚本带来的危害。
		set -r #利用shell选项使下面的代码运行在限制模式下。
12.3 进程处理
	当Shell命令不是内建命令时，Linux系统利用fork对一个子进程执行该命令，父进程处于等待状态；
	然后，如果该命令或脚本中包含编译过得可执行文件，内核将新程序转载到内存，并覆盖子进程，执行结束后，退出子进程，父进程被重新激活，开始读取Shell提示符后的下一条命令。
	12.3.1 进程和作业
		进程和作业是有区别的：一个正在执行的进程被称为作业，一个作业可以包含多个进程。用户提交作业到操作系统，作业的完成可以依赖于启动多个进程。
	12.3.2 作业控制
		进程是针对整个Linux系统而言的，作业是针对Shell而言的。
		作业有两种运行方式：前台运行和后台运行.
	13.3.3 信号
		信号是Linux进程间通讯的一个重要而复杂的概念，它是在软件层次上对中断机制的一种模拟，在原理上，一个进程收到一个信号与处理器收到一个中断请求可以说是一样的。
		Ctrl组合键、信号类型及其意义
			Ctrl+C		INT信号			停止当前运行的作业
			Ctrl+Z		TSTP信号		使当前运行的作业暂时停止（转入阻塞态）
			Ctrl+\		QUIT信号		Ctrl+C的强化版本，当Ctrl+C无法停止作业时，使用该组合键
			Ctrl+Y		TSTP信号		当进程从终端读取输入数据时，暂时停止该进程
	13.3.4 trap命令
		trap是Linux的内建命令，它用来捕捉信号，trap命令可以指定收到某种信号时所执行的命令，比如trap可以指定收到有“Ctrl+C”组合键触发的INT信号时，执行中断处理命令。
		trap的格式如下：
			trap command sig1 sig2 ...sigN